body {
    background: rgb(182,219,233);
background: linear-gradient(90deg, rgba(182,219,233,1) 0%, rgba(158,204,153,1) 100%, rgba(148,152,154,1) 100%);
}
@keyframes hideAnimation {
    to {
        visibility: hidden;
    }
}


@media all and (orientation: landscape){
    .logo {
        position: absolute;
        margin: auto;
        width: 250px;
        height: 250px;
        top:2%;
        left: 5%;
        filter: drop-shadow(0px 0px 20px white);
        transition: ease 0.5s;
    }

    .logo:hover {
        filter: drop-shadow(0px 0px 20px black);
    }

    .leform {
        margin: auto;
        padding: 10px;
        border-radius: 10px;
        background-color: antiquewhite;
        width: fit-content;
        margin: auto;
        transform: scale(2) translateY(30%);
        filter: drop-shadow(0px 0px 20px black);
    }

    .title {
        display: flex;
        justify-content: center;
        align-items: center;
        align-self: center;
        margin: auto;
        background-color: rgb(191, 248, 177);
        width: fit-content;
        padding: 10px;
        font-size: 5.3vw;
        border-radius: 30px;
        box-shadow: 0px 0px 10px 1px;
        margin-bottom: 30px;
    }

    .text {
        margin: auto;
        text-align: center;
        font-size: 1.5vw;
    }

    .alert { 
        background-color: aquamarine;
        border-radius: 10px;
        padding: 10px;
        box-shadow: 0px 0px 10px 1px;
        width: fit-content;
        font-size: 1.5vw;
        opacity: 1;
        transition: opacity 1s ease-in-out;

    }
    .alert.hide {
        opacity: 0;
        transition: opacity 1s ease-in-out;
        animation: none;
      }
      
      /* create a keyframe animation that sets the 'hide' class after a delay */
      @keyframes hide-after-delay {
        from {
          visibility: visible;
          opacity: 1;
        }
        to {
          visibility: hidden;
          opacity: 0;
        }
      }
      
      /* apply the animation to the element */
      .alert {
        opacity: 1;
        transition: opacity 1s ease-in-out;
        animation: hide-after-delay 5s forwards;
      }
}


@media all and (orientation: portrait){
    .logo {
        position: absolute;
        margin: auto;
        width: 200px;
        height: 200px;
        top:82%;
        left:35%;
        filter: drop-shadow(0px 0px 20px white);
        transition: ease 0.5s;
    }

    .logo:hover {
        filter: drop-shadow(0px 0px 20px black);
    }

    .leform {
        margin: auto;
        padding: 10px;
        border-radius: 10px;
        background-color: antiquewhite;
        width: fit-content;
        margin: auto;
        transform: scale(3.5) translateY(7.2vh); 
        filter: drop-shadow(0px 0px 20px black);
    }
    
    @media (max-width: 768px) {
        .leform {
            transform: scale(2) translateY(8.2vh); 
        }
    }
    
    @media (max-width: 480px) {
        .leform {
            transform: scale(1.5) translateY(9.2vh); 
        }
    }

    .title {
        display: flex;
        justify-content: center;
        align-items: center;
        align-self: center;
        margin: auto;
        background-color: rgb(191, 248, 177);
        width: fit-content;
        padding: 10px;
        font-size: 5.3vw;
        border-radius: 30px;
        box-shadow: 0px 0px 10px 1px;
        margin-bottom: 30px;
    }

    .text {
        margin: auto;
        text-align: center;
        font-size: 4vw;
    }
    .alert {
        transform: translateY(-550%);
        background-color: aquamarine;
        border-radius: 10px;
        padding: 10px;
        box-shadow: 0px 0px 10px 1px;
        width: fit-content;
        font-size: 3vw;
        opacity: 1;
        transition: opacity 1s ease-in-out;
    }

    .alert.hide {
        opacity: 0;
        transition: opacity 1s ease-in-out;
        animation: none;
      }
      
      /* create a keyframe animation that sets the 'hide' class after a delay */
      @keyframes hide-after-delay {
        from {
          visibility: visible;
          opacity: 1;
        }
        to {
          visibility: hidden;
          opacity: 0;
        }
      }
      
      /* apply the animation to the element */
      .alert {
        opacity: 1;
        transition: opacity 1s ease-in-out;
        animation: hide-after-delay 5s forwards;
      }

    
}

